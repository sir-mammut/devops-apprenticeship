# Makefile (repo root)
# ------------------------------------------------------------
# Top-level orchestration for devops-apprenticeship
# - run `make help` to see targets
# - designed to be idempotent and explanatory
# ------------------------------------------------------------

SHELL := /bin/bash
.ONESHELL:
.DEFAULT_GOAL := help

###############################################################################
# Configuration (change these if you need different names)
###############################################################################
APP_DIR   := app                           # where the Node app lives
IMAGE     := devops-apprentice-app         # docker image name
TAG       := latest                        # default image tag
CONTAINER := devops-apprentice-container   # container name for run/stop

###############################################################################
# Help: lists targets and their short descriptions
###############################################################################
help:    ## Show this help (default)
	@awk 'BEGIN {FS":.*?#"} /^[a-zA-Z0-9_.-]+:.*?#/ { printf "  \033[36m%-20s\033[0m %s\n", $$1, $$2 }' $(MAKEFILE_LIST)

###############################################################################
# Bootstrap: install core dependencies on macOS (idempotent wrapper)
###############################################################################
bootstrap:  ## Install Homebrew packages and start Colima (macOS)
	chmod +x ./scripts/bootstrap-macos.sh
	./scripts/bootstrap-macos.sh

###############################################################################
# Preflight: sanity checks that must pass before local development
###############################################################################
preflight:  ## Run preflight checks (ensures toolchain & docker ready)
	chmod +x ./scripts/preflight-checks.sh
	./scripts/preflight-checks.sh

###############################################################################
# Colima controls
###############################################################################
colima-up:   ## Start Colima VM with recommended resources (no-op if running)
	colima start --cpu 2 --memory 4 --disk 20 || true

colima-down: ## Stop Colima
	colima stop || true

###############################################################################
# App lifecycle targets (build/run/health/logs/stop)
# These call Docker from the repo root and point to $(APP_DIR)
###############################################################################
app-build:  ## Build Docker image from ./app
	docker build -t $(IMAGE):$(TAG) $(APP_DIR)

app-run:    ## Run the app container (detached)
	# Stop any existing container with the same name, then run detached and map port 3000
	-docker stop $(CONTAINER) 2>/dev/null || true
	-docker rm $(CONTAINER) 2>/dev/null || true
	docker run -d --name $(CONTAINER) -p 3000:3000 $(IMAGE):$(TAG)

app-logs:   ## Tail logs from the running app (Ctrl+C to stop)
	docker logs -f $(CONTAINER)

app-health: ## Health check the running app (expects /health)
	curl -sf http://localhost:3000/health || (echo "❌ Health check failed" && exit 1)

app-stop:   ## Stop & remove the app container
	docker stop $(CONTAINER) 2>/dev/null || true
	docker rm $(CONTAINER) 2>/dev/null || true

###############################################################################
# Utility: convenience to create a new "day" branch + journal stub
###############################################################################
new-day:   ## Create new day branch and journal file: make new-day DAY=02-slug
ifndef DAY
	$(error "Please provide DAY argument, e.g. make new-day DAY=02-setup")
endif
	# Example branch name: day-02-setup
	git checkout -b day-$(DAY)
	mkdir -p journal
	# Create journal stub only if it doesn't exist
	if [ ! -f journal/day$(DAY).md ]; then \
		cat > journal/day$(DAY).md <<'EOF'; \
# Day $(DAY) – DevOps Apprenticeship

**Date:** YYYY-MM-DD  
**Topic:** [short description]

## Goals
- [ ] goal 1
- [ ] goal 2

## Notes
...
EOF
		git add journal/day$(DAY).md; \
		git commit -m "chore(day-$(DAY)): create journal stub"; \
		git push -u origin HEAD; \
	else \
		echo "journal/day$(DAY).md already exists"; \
	fi
